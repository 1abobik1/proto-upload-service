syntax = "proto3";

package upload_service.v1;

option go_package = ".";

import "google/protobuf/timestamp.proto";

service FileService {
    // загрузка файла на сервер
    rpc Upload(stream UploadRequest) returns (UploadResponse);

    // обновление файла, можно обновить название файла и сами данные
    rpc UpdateFile(stream UpdateFileRequest) returns (UpdateFileResponse);

    // получение списка файлов
    rpc ListFiles(ListRequest) returns (ListResponse);

    // генерация Presigned URL с помощью Minio для скачивания одного файла
    rpc GetDownloadLink(DownloadLinkRequest) returns (DownloadLinkResponse);

    // скачивание нескольких файлов в zip-архиве
    rpc DownloadZip(DownloadZipRequest) returns (stream DownloadZipResponse);
}


message FileInfo {
    string file_id = 1;   
    string filename = 2;     // оригинальное имя файла
    google.protobuf.Timestamp created_at = 3;   // дата создания
    google.protobuf.Timestamp updated_at = 4;   // дата обновления файла
    uint64 size = 5;         
}


message UploadRequest {
    oneof data {
        string filename = 1;  // Только в первом chunk имя файла
        bytes chunk = 2;
    }
}

message UploadResponse {
    string file_id = 1;
    uint64 size = 2;
}

message UpdateFileRequest {
    oneof data {
        string file_id = 1;  // ID файла для обновления (только в первом chunk)
        bytes chunk = 2;
    }
}

message UpdateFileResponse {
    string file_id = 1;
    uint64 new_size = 2;
}


message ListRequest {}

message ListResponse {
    repeated FileInfo files = 1;
}


message DownloadLinkRequest {
    string file_id = 1; 
}

message DownloadLinkResponse {
    string url = 1;  // Presigned URL от MinIO
}


message DownloadZipRequest {
    repeated string file_ids = 1;  // ID файлов для архивации
}

message DownloadZipResponse {
    bytes chunk = 1;  // Порция zip-архива
}